
logging:
  level:
    root: INFO
    '[org.springframework.security.oauth2]': DEBUG
    '[org.springframework.security.oauth2.jwt]': DEBUG

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: info,health,metrics
      base-path: /management
  endpoint:
    health:
      show-details: always
      cache:
        time-to-live: 10000ms

spring:
  jackson:
    deserialization:
      accept-single-value-as-array: true
    serialization:
      write-dates-as-timestamps: false
    generator:
      write-numbers-as-strings: false
    default-property-inclusion: NON_NULL #permits to not return fields with null value.
    date-format: yyyy-MM-dd'T'HH:mm:ssZ

  security:
    oauth2:
      client:
        registration:
          adeo:
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_SECRET_ID}
            scope:
              - openid
              - email
              - profile
              - groups
              - advprofile
            authorization-grant-type: authorization_code
            client-authentication-method: basic
            #redirect-uri: http://localhost:8080/login/oauth2/code/adeo
        provider:
          adeo:
            authorization-uri: ${OAUTH2_AUTHORIZATION_URI}
            token-uri: ${OAUTH2_TOKEN_URI}
            user-info-uri: ${OAUTH2_USER_INFO_URI}
            user-name-attribute: ${OAUTH2_USER_NAME_ATTRIBUTE}
            issuer-uri: ${OAUTH2_ISSUER_URI}
            jwk-set-uri: ${OAUTH2_JWK_SET_URI}
      resourceserver:
        opaquetoken:
          client-id: ${OAUTH2_CLIENT_ID}
          client-secret: ${OAUTH2_SECRET_ID}
          introspection-uri: ${OAUTH2_INTROSPECT_URI}

  application:
    name: webflux-login-oauth2

info.application.name: ${spring.application.name}
info.application.developer.name: michaeljordan
info.application.developer.email: michaeljordan@bulls.com
info.team.domain: TheUnitedCenter
info.team.email: team.bulls@bulls.com

microservice:
  core:
    supplier-uri: ${SUPPLIER_API_URI}
